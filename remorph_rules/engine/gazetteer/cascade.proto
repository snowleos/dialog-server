// This file defines custom gazetteer article types, which can be used to create cascades.
// The custom article specifies the path to the file with child rules and additional options.
// The path to rules is specified using the standard "key" field with the CUSTOM type and the type-specific prefix.
// Whenever this custom article is used in other (outer) rules, the corresponding cascaded rules
// are called before outer rules.
//
// The example of the custom remorph article:
//
// TAuxRemorphArticle "complex_addr"
// {
//     key = [ {"remorph:arcadia_tests_data/wizard/geoaddr/rules.remorph" type=CUSTOM} ]
//     submatch = "addr"
//     mainword = 1
// }

import "base.proto";

message TAuxCascadeArticle : TArticle {
    // Specifies the priority of the cascaded rules.
    // Rules with highest priority are executed first.
    // Rules with equal priority are executed in the order of article IDs.
    optional int32 priority = 4 [default = 0];

    // Specifies the list of gazetteer articles/types, which are used to skip unneeded cascade runs
    repeated string filter = 5;

    // If this cascade has children sub-cascades then the flag specifies ambiguity resolving for children results
    optional bool subCascadeAmbiguity = 6 [default = true];

    extensions 10 to max;
}

// Remorph cascade with "remorph:" prefix
message TAuxRemorphArticle : TAuxCascadeArticle {
    // Main word in the matched sequence (1-based)
    // Negative values specify the offset from the last token:
    // -1 refers to the last token, -2 refers to the previous of the last one, and so on.
    optional int32 mainword = 11 [default = 1];

    // Specifies the named sub-match to use as the result.
    // If not specified then entire match result is used.
    optional string submatch = 12;

    // Specifies the list of named sub-matches
    // Remorph tries these sub-matches by turn, and first found is used as marker of main word.
    // If sub-match covers multiple words then 'mainword' field is used to select the single one
    repeated string headSubMatches = 13;

    extensions 20 to max;
}

// Remorph cascade with "remorph:" prefix
message TAuxTokenLogicArticle : TAuxCascadeArticle {
    // Main word in the matched sequence (1-based)
    // Negative values specify the offset from the last token:
    // -1 refers to the last token, -2 refers to the previous of the last one, and so on.
    optional int32 mainword = 11 [default = 1];

    // Specifies the named token to use as the result.
    // If not specified then entire match result is used.
    optional string namedToken = 12;

    // Specifies the list of named tokens
    // TokenLogic tries these named tokens by turn, and first found is used as marker of main word.
    // If there are several words with the same name then 'mainword' field is used to select the single one
    repeated string headTokens = 13;

    extensions 20 to max;
}

// Tagger cascade with "tagger:" prefix
message TAuxTaggerArticle: TAuxCascadeArticle {
    extensions 20 to max;
}
